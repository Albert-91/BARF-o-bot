version: '3.3'

services:

  # polish version of BARF-o-bot core app
  instance:
    image: rasa/rasa:latest-full
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    volumes:
      - ./config:/app/config
      - ./db:/app/db
      - ./models:/app/models
      - ./logs:/app/logs
    ports:
      - 5101:5005
    command:
      - run
      - --debug
      - --model
      - "models/model_dev.tar.gz"
      - --log-file
      - "logs/logs_dev.txt"
      - --endpoints
      - "config/endpoints.yml"
      - --cors
      - "*"
      - --credentials
      - "config/dev.credentials.yml"

  # custom action server for BARF-o-bot
  actions:
    image: barfobot_actions:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    volumes:
      - ./actions:/app/actions
      - ./config:/app/config
      - ./utils:/app/utils
    ports:
      - 5102:5055
    command:
      - start
      - --actions
      - actions
    environment:
      RASA_CREDENTIALS_FILE_PATH: config/dev.credentials.yml
    depends_on:
      - instance

  # duckling extractor service
  duckling:
    image: rasa/duckling:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - 9000:9000
    command:
      - duckling-example-exe
      - --no-access-log
      - --no-error-log
      - -p
      - "9000"
    depends_on:
      - instance

  # postgres service to store events
  postgres:
    image: postgres:latest
    volumes:
      - ./db_storage:/var/lib/postgresql/data
    ports:
      - 5432:5432
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      POSTGRES_DB: barfobot_store
      POSTGRES_USER: barfobot
      POSTGRES_PASSWORD: ${BARFOBOT_STORE_PASSWORD}
